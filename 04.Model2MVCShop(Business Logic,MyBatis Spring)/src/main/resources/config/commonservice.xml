<?xml version="1.0" encoding="UTF-8"?>
<!-- springframework가 실행 -->
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd">
				
				<!-- spring context위에 올라가있음 -->
	<!-- PropertyPlaceholderConfigurer 로 로드된 resource 는 ${  } 로 접근 가능 -->
	<!-- 컨테이너 설정파일의 빈들을 만들기 전에 설정파일 중에 있는 임시표기를 properties 파일에 설정한 값으로 바꿔줌 -->
	<bean	id="propertyConfigurer"	
				class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/jdbc.properties" />
	</bean>					
	
	<!-- DBCP (Apache Commons Database Connection) 사용 -->
	<bean id="dataSource"	
				class="org.apache.commons.dbcp.BasicDataSource" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/><!-- 커넥션 최대 10 -->
        <property name="maxActive" value="${jdbc.maxActive}"/><!-- 커넥션초기5 -->
	</bean>			<!--커넥션정보를 기본적으로 계속 생성하고 관리하려면 기본정보를 알고 있어야함  -->				
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  	<constructor-arg ref="dataSource" />
	</bean>					 
												 
	<!-- ㅇ SqlSession 인스턴스를 생성하는 SqlSessionFactory 생성
	      ㅇ Factory Pattern  적용 :: Spring 의 FactoryBean interface 구현 -->
	       <!-- 스프링이 대신 sqlsessionfactiorybeab관리 -->
	       <!-- 마이바티스스프링 라이브러리를 사용 -->
	<bean 	id="sqlSessionFactoryBean"
					class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/> <!-- 이 정보를 갖고 db연결 -->
		<property name="configLocation" value="classpath:sql/mybatis-config.xml"/>
	</bean>
	
	<!--  ㅇ SqlSessionTeampate 인스턴스생성
		   ㅇ Spring 과 연동시 사용하는 핵심 SqlSession 구현체
		   ㅇ Spring 에서 제공한는 Transaction 처리에 구조화된 SqlSession 구현체	 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">		
		<constructor-arg ref="sqlSessionFactoryBean"/><!-- 아직 팩토리빈인데 prepareStatement라 보면딤 execute를 사용하지않았음 -->
	</bean>														<!--템플릿이란 쓰기 직전의 상태로 작동하는 상태가 아님  -->
														
	<!-- 	ㅇ 어노테이션 기반 :: Spring Framework 사용.-->
	<!--  패키지 경로를 명시해주면 해당경로를 포함한 모든 경로에 적용되고 ,어노테이션을 명시한 자바 파일들이 bean으로 등록 되어 사용 가능해진다. -->				
	<context:component-scan base-package="com.model2.mvc.service"/>
	
</beans>